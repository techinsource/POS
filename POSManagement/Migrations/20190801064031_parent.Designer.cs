// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POSAnventory.Models;

namespace POSManagement.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190801064031_parent")]
    partial class parent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("POSAnventory.Models.Itemd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<double>("Cost_Price");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("LineItemDefinitionId");

                    b.Property<string>("Name");

                    b.Property<double>("Retail_Price");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("LineItemDefinitionId");

                    b.ToTable("Itemds");
                });

            modelBuilder.Entity("POSAnventory.Models.Items.Categorys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("LineItemDefinitionId");

                    b.Property<string>("Name");

                    b.Property<int>("Sortorder");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("LineItemDefinitionId");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("POSAnventory.Models.Items.ItemGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("LineItemDefinitionId");

                    b.Property<string>("Name");

                    b.Property<int>("SortItem");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("LineItemDefinitionId");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("POSAnventory.Models.Items.Item_Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("LineItemDefinitionId");

                    b.Property<string>("Name");

                    b.Property<int>("Sortorder");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("LineItemDefinitionId");

                    b.ToTable("Item_Templates");
                });

            modelBuilder.Entity("POSAnventory.Models.Items.Sub_Categorys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<int>("Code");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("Sortorder");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sub_Categorys");
                });

            modelBuilder.Entity("POSAnventory.Models.LineItemDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Barcode");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("Sortorder");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("LineItemDefinitions");
                });

            modelBuilder.Entity("POSManagement.Models.Customer.Customerss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Age");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<double>("Creditbalance");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.Property<string>("Phone");

                    b.Property<string>("Sex");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Customerss");
                });

            modelBuilder.Entity("POSManagement.Models.Expanditures.Expanditures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int?>("CategorysId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Notes");

                    b.Property<int>("Refno");

                    b.Property<string>("Returnable");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<string>("Whatfor");

                    b.HasKey("Id");

                    b.HasIndex("CategorysId");

                    b.ToTable("Expanditures");
                });

            modelBuilder.Entity("POSManagement.Models.Expanditures.ExpanseCategory.ExpanseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Details");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("Order");

                    b.Property<string>("Parent");

                    b.Property<string>("Status");

                    b.Property<string>("Total");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("ExpanseCategory");
                });

            modelBuilder.Entity("POSManagement.Models.Expanditures.ParentCategory.ParentCategorys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("ParentCategorys");
                });

            modelBuilder.Entity("POSManagement.Models.Purchase.PurchaseItem.Purchasess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("ItemId");

                    b.Property<string>("Notes");

                    b.Property<int>("Quantity");

                    b.Property<string>("Referenceno");

                    b.Property<int?>("SuppliersId");

                    b.Property<double>("Totalamount");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("Purchasess");
                });

            modelBuilder.Entity("POSManagement.Models.Purchasess.Supplierss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Supplierss");
                });

            modelBuilder.Entity("POSManagement.Models.Quotation.Quotationss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biller");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int?>("CustomerssId");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("ItemdId");

                    b.Property<string>("Notes");

                    b.Property<string>("Refeno");

                    b.Property<string>("Status");

                    b.Property<int?>("SuppllierssId");

                    b.Property<double>("Total");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("CustomerssId");

                    b.HasIndex("ItemdId");

                    b.HasIndex("SuppllierssId");

                    b.ToTable("Quotationss");
                });

            modelBuilder.Entity("POSManagement.Models.User.UsersGroup.UserssGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("Totaluser");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("UserssGroup");
                });

            modelBuilder.Entity("POSManagement.Models.User.Userss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<int?>("UserssGroupsId");

                    b.HasKey("Id");

                    b.HasIndex("UserssGroupsId");

                    b.ToTable("Userss");
                });

            modelBuilder.Entity("POSAnventory.Models.Itemd", b =>
                {
                    b.HasOne("POSAnventory.Models.LineItemDefinition", "LineItemDefinition")
                        .WithMany()
                        .HasForeignKey("LineItemDefinitionId");
                });

            modelBuilder.Entity("POSAnventory.Models.Items.Categorys", b =>
                {
                    b.HasOne("POSAnventory.Models.LineItemDefinition", "LineItemDefinition")
                        .WithMany()
                        .HasForeignKey("LineItemDefinitionId");
                });

            modelBuilder.Entity("POSAnventory.Models.Items.ItemGroups", b =>
                {
                    b.HasOne("POSAnventory.Models.LineItemDefinition", "LineItemDefinition")
                        .WithMany()
                        .HasForeignKey("LineItemDefinitionId");
                });

            modelBuilder.Entity("POSAnventory.Models.Items.Item_Template", b =>
                {
                    b.HasOne("POSAnventory.Models.LineItemDefinition", "LineItemDefinition")
                        .WithMany()
                        .HasForeignKey("LineItemDefinitionId");
                });

            modelBuilder.Entity("POSAnventory.Models.Items.Sub_Categorys", b =>
                {
                    b.HasOne("POSAnventory.Models.Items.Categorys", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("POSManagement.Models.Expanditures.Expanditures", b =>
                {
                    b.HasOne("POSAnventory.Models.Items.Categorys", "Categorys")
                        .WithMany()
                        .HasForeignKey("CategorysId");
                });

            modelBuilder.Entity("POSManagement.Models.Purchase.PurchaseItem.Purchasess", b =>
                {
                    b.HasOne("POSAnventory.Models.Itemd", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("POSManagement.Models.Purchasess.Supplierss", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SuppliersId");
                });

            modelBuilder.Entity("POSManagement.Models.Quotation.Quotationss", b =>
                {
                    b.HasOne("POSManagement.Models.Customer.Customerss", "Customerss")
                        .WithMany()
                        .HasForeignKey("CustomerssId");

                    b.HasOne("POSAnventory.Models.Itemd", "Itemd")
                        .WithMany()
                        .HasForeignKey("ItemdId");

                    b.HasOne("POSManagement.Models.Purchasess.Supplierss", "Suppllierss")
                        .WithMany()
                        .HasForeignKey("SuppllierssId");
                });

            modelBuilder.Entity("POSManagement.Models.User.Userss", b =>
                {
                    b.HasOne("POSManagement.Models.User.UsersGroup.UserssGroup", "UserssGroups")
                        .WithMany()
                        .HasForeignKey("UserssGroupsId");
                });
#pragma warning restore 612, 618
        }
    }
}
